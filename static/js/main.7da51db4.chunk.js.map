{"version":3,"sources":["components/Main.js","components/Sub.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Main","useState","loading","setloading","temp","settemp","country","setcountry","city","setcity","desc","setdesc","icon","seticon","id","setid","input","setinput","text","settext","useEffect","search","api","a","fetch","res","json","data","console","log","name","sys","convert","main","toFixed","weather","description","alert","abc","change","Math","round","className","class","type","e","target","value","onClick","src","style","width","height","alignContent","color","to","Sub","props","ans","match","params","setdata","list","href","map","dt_txt","alignSelf","Navbar","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7da51db4.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default function Main() {\r\n    const key='270afbc518467f7d9f0d40df7450164c'\r\n \r\n\r\n    const [loading, setloading] = useState(false)\r\n    const [temp, settemp] = useState(\"\")\r\n    const [country, setcountry] = useState(\"\")\r\n    const [city, setcity] = useState(\"\")\r\n    const [desc, setdesc] = useState(\"\")\r\n    const [icon, seticon] = useState(\"\")\r\n    const [id, setid] = useState(\"\")\r\n    const [input, setinput] = useState(\"\")\r\n    const [text, settext] = useState('london')\r\n\r\n    useEffect(()=>{\r\n        search()\r\n    },[text])\r\n\r\n    const get=()=>{\r\n        settext(input)\r\n    }\r\n    \r\n  \r\n    const api=`http://api.openweathermap.org/data/2.5/weather?q=${text}&appid=${key}`\r\n    const search=async() => {\r\n        try{\r\n            setloading(true)\r\n            const res=await fetch(api)\r\n            const data=await res.json()\r\n            console.log(data)\r\n             setcity(data.name)\r\n             setcountry(data.sys.country)\r\n             // settemp(data.main.temp)\r\n             convert((data.main.temp).toFixed(2))\r\n             setdesc(data.weather[0].description)\r\n             seticon(data.weather[0].icon)\r\n             setid(data.id)\r\n             setloading(false)\r\n        }\r\n        catch{\r\n            alert(\"not exists\")\r\n        }\r\n      \r\n    }\r\n    \r\n        const convert=(abc)=>{\r\n            const change=Math.round(abc-273)\r\n            settemp(change)\r\n        }\r\n    return (\r\n        <div className='bg'>\r\n        <div className='container'>\r\n            <div className='row'>\r\n            <div className='col-lg-8 offset-2 '>\r\n            <div class=\"form-group mt-3\">\r\n            <label>City Name</label>\r\n            <input class=\"form-control\" type='text' type='text' value={input} placeholder='Type City Name'\r\n             onChange={e=>setinput(e.target.value)}/>\r\n            </div>\r\n            <button onClick={get} class=\"btn btn-primary mb-3\">Search</button>\r\n            </div>\r\n            </div>\r\n    \r\n<div  className='row'>\r\n    <div className='col-lg-8 offset-2  text-center'>\r\n    {loading?<h1>Loading...</h1>:\r\n    <div className='text-white'>\r\n     <h2>{city}</h2>\r\n      <h2>{country}</h2>\r\n      { <h2>{temp}'C</h2>}\r\n      <h4>{desc}</h4>\r\n      <img src={`https://openweathermap.org/img/wn/${icon}@2x.png`} \r\n      style={{width:200,height:160,alignContent:\"center\",color:\"white\"}}/><br/>\r\n      <Link to={'/sub/'+ id} className='text-white font-weight-bold'><h3>Click to Get Next 5-days weather</h3></Link>\r\n      \r\n    </div>\r\n    }\r\n    </div>\r\n</div>\r\n    \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default function Sub(props) {\r\n    const key='270afbc518467f7d9f0d40df7450164c'\r\n    const ans=props.match.params.id\r\n    const [loading, setloading] = useState(false)\r\n    const [data, setdata] = useState([])\r\n\r\n  useEffect(async() => {\r\n    setloading(true)\r\n   const res=await fetch(`https://api.openweathermap.org/data/2.5/forecast?id=${ans}&appid=${key}`)\r\n   const data=await res.json()\r\n   console.log(data)\r\n   setdata(data.list)\r\n    setloading(false)\r\n},[])\r\n    return (\r\n        <div >\r\n       \r\n        {loading?<h1>loading...</h1>:\r\n        <div className='text-center'>\r\n             <h1>5 Days forecast</h1>\r\n             <h1><a href='/'>back</a></h1>\r\n            \r\n             <div className='fone'>\r\n             {data.map((value)=>{\r\n                \r\n                return <div className='card cardone text-center' style={{width:300}}>\r\n                    <p>{value.dt_txt}</p>\r\n                    <p>{(value.main.temp-273).toFixed(2)}</p>\r\n                    <p>{value.weather[0].description}</p>  \r\n                    <img src={`https://openweathermap.org/img/wn/${value.weather[0].icon}@2x.png`}\r\n                     style={{width:100,height:100,alignSelf:\"center\"}}/>\r\n                </div>\r\n            })}\r\n             </div>\r\n            \r\n        </div>\r\n        }\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Link} from \"react-router-dom\";\r\nexport default function Navbar() {\r\n    return (\r\n        <div>\r\n             <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark mb-4 text-center\">\r\n                          <div class=\"container\">\r\n                                  <div class=\"navbar-header\">\r\n                                    <Link class=\"navbar-brand\" to='/' >\r\n                                    <h1 className='one font-weight-bold text-capitalize'>\r\n                                    Weather App</h1></Link> \r\n                                  </div>\r\n                          </div>\r\n                </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport { BrowserRouter,Route, Switch } from \"react-router-dom\";\nimport Main from './components/Main';\nimport Sub from './components/Sub';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport Navbar from './components/Navbar';\nexport default function App() {\n  return (\n    <div>\n      <BrowserRouter>  \n      <Navbar/>\n      <Switch>\n        <Route exact path='/' component={Main}></Route>\n        <Route  path='/sub/:id' component={Sub}></Route>\n      </Switch>\n    </BrowserRouter>\n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}